
linux examen stoff
simple commando's 

â€‹

mkdir   "map aanmaken"
touch   "bestand aanmaken"
vi    "bestande bewerken"

zypper install (naam van de app)

â€‹

"gebruiker aanmaken"

useradd (gebruikersnaam)



"gebruiker aanmaken met home map"
useradd -m (gebruikersnaam)



"groep aanmaken"
groupadd (groepsnaam)



"groep aanmaken met ID"

voorbeeld: groupadd -g (groepID) (groepnaam)

â€‹

"map/bestand eigenaar wijzigen" 

 voorbeeld: chown (gebruikersnaam) (mapnaam)

â€‹

"groep eigenaar wijzigen"

voorbeeld: chgrp (groepnaam) (gebruikersnaam)


"gebruiker toevoegen aan een groep"

voorbeeld: usermod -aG (groepnaam) (gebruikersnaam)


"gebruiker verwijderen uit de groep"

voorbeeld: gpasswd -d (gebruikersnaam) (groepnaam)



"bestanden/map rechten wijzigen"

voorbeeld: chmod (groep naam) (mapnaam)

â€‹

"Secondaire groep rechten toewijzen aan een map"
voorbeeld: setfacl -m g:(groep) (rechten: rwx) (map locatie)

â€‹

"een servers opstarten"

systemctl start (naam van een service)



"een service stop zetten"
systemctl stop  (naam van een service)



"een service opnieuw opstarten"

systemctl restart (naam van een service)



"een service permanent aanzetten"
systemctl enable (naam van een service)

â€‹

â€‹

samba server opzetten.

Zorg dat je in de HOME map zit.
cd /home
En check de mappen met het commando "ls"

Maak een serverfile aan:
mkdir {filename}
chgrp users {filename}/
chmod 770 {filename}/
En check alle rechten met "ls -l"

Start smb/nmb services:
systemctl start smb.service
systemctl start nmb.service
En controlleer deze met "systemctl status smb.service"

Veranderingen in de VI:
vi /etc/samba/smb.conf

Binnen VI voeg het volgende stukje toe:
[{filename}] (met de haak

        comment = [comment]
        path = /home/{filename}
        writeable = yes

        browseable = yes

volden commando's zijn optioneel

        create mask = 0660

        directory mask = 0770

â€‹

Ga uit VI en maak een smb user aan.
smbpasswd -a [gebruikersnaam]

volg de stappen:
systemctl reload smb.service
systemctl reload nmb.service
systemctl stop firewalld.service
ip address



de volgende comando werkt ook:

"Samba service permanent toevoegen aan firewall zodat de services niet meer geblokkeerd worden"

firewall-cmd --add-service=samba --permanent
firewall-cmd --reload

Er volgt een ip adres.
deze is in te vullen tussen de windows verkenner voor een sharefolder op de samba server.

â€‹

â€‹

NFS server maken

NFS-server opzetten op servermachine
Installeer de NFS-server:
zypper install nfs-kernel-server

Maak de map aan die je wilt delen via NFS:
mkdir -p /mnt/nfs_share

Verander de eigenaar naar een anonieme gebruiker (voor openbare toegang):
chown -R nobody:nogroup /mnt/nfs_share/

Geef volledige rechten op de gedeelde map (lezen, schrijven, uitvoeren):
chmod 777 /mnt/nfs_share/

Open het NFS-configuratiebestand:
vi /etc/exports

Voeg deze regel toe om toegang te geven aan een heel subnet (pas IP-bereik aan indien nodig):
/mnt/nfs_share 192.168.x.x/24(rw,sync,no_subtree_check)

Exporteer de NFS-shares en herstart de server:
exportfs -a
systemctl restart nfs-server

Firewall openzetten voor NFS (poort 2049):
ufw allow from 192.168.199.0/24 to any port nfs
ufw enable
ufw status

ðŸ’» NFS-client opzetten op de andere Linux VM
Installeer NFS-clientsupport:
zypper install nfs-client

Maak een lokale map aan waar de servermap op gemount wordt:
mkdir -p /mnt/nfs_test

Mount de NFS-share (vervang IP en pad indien nodig):
mount -t nfs 192.168.x.x:/mnt/nfs_share /mnt/nfs_test

âœ… Testen of NFS werkt
Navigeer naar de gemounte map:
cd /mnt/nfs_test
Maak een testbestand aan (deze komt op de server terecht):

touch testfile.txt
Controleer op de server of het bestand daar staat:

ls /mnt/nfs_share

firewall als het niet lukt op de client uit zetten

firewall-cmd --add-port=2049/tcp --permanent
firewall-cmd --reload



â€‹---------------------------------

zypper install nfs-kernel-server

â€‹

#het maken van een NFS directory en mappen

mkdir -p /mnt/nfs_share

â€‹

Since we want all the client machines to access the shared directory, remove any restrictions in the directory permissions.

â€‹

chown -R nobody:nogroup /mnt/nfs_share/

â€‹

You can also tweak the file permissions to your preference. Hereâ€™s we have given the read, write and execute privileges to all the contents inside the directory.



chmod 777 /mnt/nfs_share/

â€‹

Permissions for accessing the NFS server are defined in the /etc/exports file. So open the file using your favorite text editor:

â€‹

vim /etc/exports



You can provide access to a single client, multiple clients, or specify an entire subnet.

In this guide, we have allowed an entire subnet to have access to the NFS share.

â€‹

/mnt/nfs_share 192.168.x.x/24(rw,sync,no_subtree_check)

â€‹

Explanation about the options used in the above command.

rw: Stands for Read/Write.

sync: Requires changes to be written to the disk before they are applied.

No_subtree_check: Eliminates subtree checking.

â€‹

To grant access to a single client, use the syntax:

/mnt/nfs_share client_IP_1 (re,sync,no_subtree_check)

â€‹

After granting access to the preferred client systems, export the NFS share directory and restart the NFS kernel server for the changes to come into effect.

â€‹

exportfs -a

systemctl restart nfs-kernel-server

â€‹

For the client to access the NFS share, you need to allow access through the firewall otherwise, accessing and mounting the shared directory will be impossible. To achieve this run the command:

â€‹

ufw allow from 192.168.43.0/24 to any port nfs

â€‹

Reload or enable the firewall (if it was turned off) and check the status of the firewall. Port 2049, which is the default file share, should be opened.

â€‹

ufw enable

ufw status

â€‹

#!/bin/bash

â€‹

# Source folder path

          source_folder="/home/myfolder"

# Destination backup path

          backup_dir="/home/backup"

# Create the backup directory if it doesn't exist

          mkdir -p "$backup_dir"

# Backup filename with timestamp

          backup_file="$backup_dir/$(date +'%Y%m%d%H%M%S')_myfile.txt"

# Copy the source file to the backup location

          cp "$source_file" "$backup_file" echo "Backup created at: $backup_file"

â€‹

â€‹

APACHE2 INSTALLEREN EN CONFIGUREREN

Installeer Apache2 en zet de service aan.

zypper refresh

zypper update

zypper install apache2

systemctl start apache2.service

systemctl enable apache2.service



Gebruik "cd /srv/www/htdocs" en maak de map index.html aan met "echo index.html" Bewerk de file (index.html) met "vi index.html" In deze file komt alles te staan wat ook op de website komt.



Restart de service.

systemctl reload apache2

systemctl restart apache2



controlleer het config bestand: apache2ctl configtest

(SYSTAX OK = goed)



Ga naar de webbrowser, en typ "localhost"

â€‹

â€‹

VI bestanden aanmaken en wijzigen

voorbeeld.

vi test.txt

voer text in

druk [esc] en type {:wq}

Stap 1: Installeer de FTP-server
sudo zypper install vsftpd
â†’ Installeert de FTP-server (VSFTPD)

Stap 2: Zet de FTP-server aan en start hem
sudo systemctl enable vsftpd
â†’ Zorgt dat de FTP-server automatisch opstart bij het aanzetten van de pc

sudo systemctl start vsftpd
â†’ Start de FTP-server meteen

Stap 3: Open het configuratiebestand
sudo vi /etc/vsftpd.conf
â†’ Open VSFTPD-configuratie in vi

Zorg dat deze regels actief zijn of aangepast worden in het bestand:
# anonymous_enable=YES        â†’ Staat anonieme gebruikers toe
# local_enable=YES            â†’ Staat lokale Linux-gebruikers toe om in te loggen
# write_enable=YES            â†’ Staat uploaden/schrijven toe
# chroot_local_user=YES       â†’ Sluit gebruikers op in hun eigen home-directory

Druk op Esc, dan typ je :wq om op te slaan en af te sluiten

Stap 4: Herstart de FTP-server met de nieuwe instellingen
sudo systemctl restart vsftpd

Stap 5: Open FTP-poort in de firewall (indien actief)
sudo firewall-cmd --add-service=ftp --permanent
sudo firewall-cmd --reload
â†’ Staat FTP-verkeer toe via de firewall

# Stap 6: Installeer een FTP-client (indien nodig)
sudo zypper install ftp
# â†’ Installeert het FTP-programma

# Stap 7: Verbind met de FTP-server
ftp <server-ip>
# â†’ Vervang <server-ip> door het IP-adres van de FTP-server

# Inloggen met:
# - 'anonymous' (voor anonieme toegang)
# - Of een echte gebruikersnaam (bijv. ftpgebruiker)

# Binnen FTP kun je deze commando's gebruiken:
ls
# â†’ Toont bestanden en mappen

get bestand.txt
# â†’ Downloadt een bestand van de server naar de client

put bestand.txt
# â†’ Uploadt een bestand van de client naar de server (indien write_enable=YES)

bye
# â†’ Verlaat de FTP-sessie


test met een lokale gebruiker

# Maak een gebruiker aan voor FTP
sudo useradd ftpgebruiker -m
sudo passwd ftpgebruiker
# â†’ Maakt een gebruiker aan met een home-map en stelt een wachtwoord in

# Daarna kun je inloggen via FTP met:
ftp <server-ip>
# Gebruik:
# - gebruikersnaam: ftpgebruiker
# - wachtwoord: zoals ingesteld

backup

# Maak een backupscript met vi
vi /root/backup.sh
# Voeg deze inhoud toe aan het script (in vi: i om te editen, na typen Esc, dan :wq om op te slaan en sluiten)
# Voorbeeld backupscript:
#!/bin/bash
rsync -a /home/* /tmp/back/

# Maak de backup-map aan waar je bestanden naartoe kopieert
mkdir -p /tmp/back

# Maak het script uitvoerbaar
chmod +x /root/backup.sh

# Test het script handmatig om te zien of het werkt
/root/backup.sh

# Controleer of de bestanden gekopieerd zijn
ls -l /tmp/back/

# Open de crontab om de taak automatisch te laten draaien
crontab -e

# Voeg deze regel toe aan crontab om het script elke minuut uit te voeren:
*/1 * * * * /root/backup.sh

# Sla op en sluit de crontab

# (Optioneel) Check of de cronjob actief is
crontab -l

# Wacht een paar minuten en controleer opnieuw of de backup-bestanden in /tmp/back zijn bijgewerkt
ls -lt /tmp/back/

//////////////EXTRA////////////
| Actie                     | Commando                       | Uitleg                                                |
| ------------------------- | ------------------------------ | ----------------------------------------------------- |
| Lijst bestanden mappen    | `ls`                           | Toont inhoud van huidige map                          |
| Lijst met details         | `ls -l`                        | Toont bestanden met rechten, eigenaar, grootte, datum |
| Huidige map tonen         | `pwd`                          | Print working directory (huidige map)                 |
| Veranderen map            | `cd /pad/naar/map`             | Ga naar opgegeven map                                 |
| Map aanmaken              | `mkdir mapnaam`                | Maak nieuwe map                                       |
| Bestand kopiÃ«ren          | `cp bron bestand_kopie`        | Kopieer bestand                                       |
| Map en inhoud kopiÃ«ren    | `cp -r bronmap doelmap`        | Kopieer map inclusief inhoud                          |
| Bestand verplaatsen       | `mv bestand nieuw_pad/`        | Verplaats of hernoem bestand                          |
| Bestand verwijderen       | `rm bestand`                   | Verwijder bestand                                     |
| Map en inhoud verwijderen | `rm -r mapnaam`                | Verwijder map met alle inhoud                         |
| Bestand maken/leegmaken   | `touch bestandsnaam`           | Maak nieuw leeg bestand                               |
| Bestand tonen             | `cat bestandsnaam`             | Toon inhoud van een bestand                           |
| Bestand bewerken (vi)     | `vi bestandsnaam`              | Open bestand in vi-editor                             |
| Bestanden zoeken          | `find /pad -name bestandsnaam` | Zoek bestand vanaf pad                                |
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

# Groep koppelen aan map (eigenaar groep instellen)
chgrp directie directie/             # Zet groep directie als eigenaar van map directie/
chgrp adviseurs adviseurs/           # Zet groep adviseurs als eigenaar van map adviseurs/
chgrp secretaressen secretaressen/   # Zet groep secretaressen als eigenaar van map secretaressen/

# Schrijfrechten geven aan groep
chmod g+w directie/                  # Groep directie mag schrijven in map directie/
chmod g+w adviseurs/                 # Groep adviseurs mag schrijven in map adviseurs/
chmod g+w secretaressen/              # Groep secretaressen mag schrijven in map secretaressen/

# Rechten bekijken
ls -l                               # Toont eigenaar, groep en rechten van bestanden/mappen

# Variaties chmod groep rechten (wat je ermee doet)
chmod g+r map/      # Groep mag lezen
chmod g+w map/      # Groep mag schrijven
chmod g+x map/      # Groep mag map betreden (uitvoeren)
chmod g+rw map/     # Groep mag lezen en schrijven
chmod g+rx map/     # Groep mag lezen en betreden
chmod g+rwx map/    # Groep krijgt alle rechten
chmod g-w map/      # Groep schrijfrechten afnemen
chmod g-r map/      # Groep leesrechten afnemen

# ACL: Extra rechten geven aan specifieke groepen zonder eigenaar te veranderen
setfacl -m g:directie:r-x secretaressen/   # Groep directie krijgt lees+uitvoer in secretaressen/
setfacl -m g:adviseurs:r-x secretaressen/  # Groep adviseurs krijgt lees+uitvoer in secretaressen/

# ACL rechten bekijken
getfacl secretaressen/              # Bekijk ACL-instellingen van secretaressen/

# Korte uitleg:
# chgrp = groep toewijzen aan map
# chmod g+ = groep rechten geven of afnemen
# ls -l = rechten bekijken
# setfacl = extra groepstoegang geven
# getfacl = ACL rechten bekijken

# Klassieke chmod cijfers (octale notatie):
# 7 = lezen (4) + schrijven (2) + uitvoeren (1) = alle rechten
# 6 = lezen (4) + schrijven (2)
# 5 = lezen (4) + uitvoeren (1)
# 4 = alleen lezen
# 3 = schrijven (2) + uitvoeren (1)
# 2 = schrijven
# 1 = uitvoeren
# 0 = geen rechten

# Voorbeeld: chmod 770 map/
# Eigenaar en groep: lezen, schrijven, uitvoeren
# Overigen: geen rechten


//////////////////////////////////////////////////////////

# Open Samba-configuratiebestand
vi /etc/samba/smb.conf   # Optioneel: je kunt ook nano gebruiken (nano /etc/samba/smb.conf) als je dat fijner vindt

# Voeg de volgende shares toe aan het einde van het bestand:

[Directie]                              # Naam van de gedeelde map
Comment = share voor directie          # Beschrijving van de share (optioneel, puur informatief)
path = /home/directie                  # (Optioneel, maar vaak nodig) maplocatie als die niet standaard is
writeable = yes                        # Gebruikers mogen schrijven (bestand aanpassen, toevoegen)
browseable = yes                       # Share is zichtbaar in netwerkoverzicht (anders verborgen)
valid users = @directie                # Alleen leden van groep 'directie' mogen toegang
write list = @directie                 # Alleen deze groep mag schrijven
create mask = 0770                     # Bestanden krijgen standaard deze rechten (lees/schrijf/uitvoer voor eigenaar en groep)
directory mask = 0775                  # Mappen krijgen standaard deze rechten

[adviseurs]
comment = share voor financieel adviseurs
path = /home/adviseurs                 # Locatie van de map
writeable = yes
browseable = yes
valid users = @adviseurs @directie     # Beide groepen mogen toegang
write list = @adviseurs                # Alleen adviseurs mogen schrijven
read list = @directie                  # Directie mag alleen lezen
create mask = 0664                     # Bestanden: lezen/schrijven voor eigenaar/groep, niets voor anderen
directory mask = 0775

[secretaressen]
comment = share voor secretaressen
path = /home/secretaressen
writeable = yes
browseable = yes
valid users = @secretaressen @directie @adviseurs   # Deze groepen mogen toegang
write list = @secretaressen                         # Alleen secretaressen mogen schrijven
read list = @adviseurs @directie                    # Adviseurs en directie mogen alleen lezen
create mask = 0664
directory mask = 0775

# Uitleg over de parameters:

# [naam]                 = Naam van de share zoals die zichtbaar is in netwerk
# comment                = Beschrijving, optioneel
# path                   = Locatie van de map op het systeem
# writeable              = yes betekent dat schrijven (toevoegen/wijzigen) is toegestaan
# browseable             = yes betekent dat anderen deze share kunnen zien
# valid users            = Wie mag erin (gebruikers of groepen met @)
# write list             = Wie mag schrijven (extra controle)
# read list              = Wie mag alleen lezen (ook als writeable yes is)
# create mask            = Rechten voor nieuw aangemaakte bestanden (bijv. 0770 = lees/schrijf/uitvoer voor eigenaar en groep)
# directory mask         = Rechten voor nieuwe mappen

# Mask uitleg:
# 0770 = rwx voor eigenaar en groep (7), niets voor anderen (0)
# 0664 = rw voor eigenaar en groep (6), alleen lezen voor anderen (4)
# 0775 = rwx voor eigenaar en groep, rx (geen schrijven) voor anderen


chmod xyz
| Positie | Betekenis        |
| ------- | ---------------- |
| X       | eigenaar (user)  |
| Y       | groep (group)    |
| Z       | anderen (others) |

| Cijfer | Rechten                             |
| ------ | ----------------------------------- |
| 0      | --- (geen)                          |
| 1      | --x (uitvoeren)                     |
| 2      | -w- (schrijven)                     |
| 3      | -wx (schrijven + uitvoeren)         |
| 4      | r-- (lezen)                         |
| 5      | r-x (lezen + uitvoeren)             |
| 6      | rw- (lezen + schrijven)             |
| 7      | rwx (lezen + schrijven + uitvoeren) |


